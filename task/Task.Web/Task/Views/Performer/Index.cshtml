@model Task.Web.Models.PerformerPageViewModel
@using Task.Web.Helpers
@{
    ViewBag.Title = "Amdm.ru";
}

<div class="panel">
        <h2>Популярные исполнители</h2>
    <div class="panel-body set-accords">
        <table class="table">
            <thead>
                <tr class="top_label">
                <th colspan="2">Исполнитель
                    @Html.ActionLink("A", "Index", new { page = Model.PageInfo.PageNumber, sort = "ascName" })
                    @Html.ActionLink("B", "Index", new { page = Model.PageInfo.PageNumber, sort = "descName" })
                    </th>
                <th class="td2">Подборов
                    @Html.ActionLink("A", "Index", new { page = Model.PageInfo.PageNumber, sort = "ascSongs" })
                    @Html.ActionLink("B", "Index", new { page = Model.PageInfo.PageNumber, sort = "descSongs" })
                    </th>
                <th class="td2">Просмотров
                    @Html.ActionLink("A", "Index", new { page = Model.PageInfo.PageNumber, sort = "ascView" })
                    @Html.ActionLink("B", "Index", new { page = Model.PageInfo.PageNumber, sort = "descView"})
                    </th>
                </tr>
            </thead>
            @foreach (var item in Model.Performers)
            {
                <tr>
                    <td class="td1-icon">
                        <a href='@Url.Action("PerformerProfile", new { idPerformer = item.Id, name = item.UrlName })'>
                            <img src='@item.UrlImage' width="33" height="33"/>
                        </a>
                    </td>
                    <td class="td1-1">@Html.ActionLink(item.Name, "PerformerProfile", new { idPerformer = item.Id, name = item.UrlName })</td>
                    <td class="td2">@string.Format("{0:n0}", item.CountOfSongs)</td>
                    <td class="td2">@string.Format("{0:n0}", item.Views)</td>
                </tr>
            }
        </table>
    </div>
    <div class="btn-group">
        @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { page = x, sort = Model.CurrentSort }))
    </div>

</div>
